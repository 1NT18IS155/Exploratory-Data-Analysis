geom_boxplot(width=0.3) +
labs(x="",y="Marks", title="                                              Distribution of scores") +
theme_ggstatsplot() +
theme(legend.title = element_blank()) +
scale_fill_brewer(palette="Pastel1")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Hmisc)
library(ggplot2)
library(ggstatsplot)
mydata = read.csv("./test_scores.csv")
head(mydata) %>% knitr::kable()
str(mydata)
summary(mydata)
summary(mydata$school)
summary(mydata$pretest)
summary(mydata$posttest)
class(mydata)
length(mydata)
names(mydata)
glimpse(mydata)
school_count <- group_by(mydata,school) %>% count()
school_count
school_count %>% ggplot(aes(x=school, y=n)) +
geom_bar(stat="identity", fill= "#f68060", alpha=0.6, width=0.) +
coord_flip() +
theme_ggstatsplot() +
labs(y="Number of Students", x="Name of School", title = "                   Distribution of Students studying in different Schools")
class(school_count)
count(mydata,school) %>% arrange(n) %>% head(1)
count(mydata,school) %>% arrange(n) %>% tail(1)
mydata %>% filter(school == "ANKYI") %>% knitr::kable()
mean_school <- mydata %>% select(school,pretest,posttest) %>% group_by(school) %>% summarise(pretest_mean=mean(pretest), posttest_mean=mean(posttest))
mean_school
mean_school %>% ggplot() +
geom_segment(aes(x=school,xend=school,y=pretest_mean,yend=posttest_mean),color="grey") +
geom_point(aes(x=school,y=pretest_mean,color="pretest marks"))+
geom_point(aes(x=school,y=posttest_mean,color="posttest marks"))+
scale_color_manual(values = c("pretest marks"="red","posttest marks"="blue"))+
ggtitle("Pretest vs Posttest average marks comparison across Schools")+
xlab("School")+
ylab("Average Marks")+
coord_flip()+
theme_minimal()+
theme(
legend.title = element_blank()
)
school_set <- group_by(mydata,school_setting) %>% count()
school_set
school_set %>% count() %>% ggplot(aes(x="",y=c(school_set$n), fill=school_setting)) +
geom_bar(stat="identity", width=1) +
coord_polar("y",start=0) +
theme_void() +
labs(title= "Distribution of Students according to location") +
theme(legend.title=element_blank()) +
geom_text(aes(label=paste0(school_set$n," (",scales::percent(school_set$n/sum(school_set$n)),")")),position = position_stack(vjust=0.5)) +
scale_fill_brewer(palette="Pastel1")
mean_set <- mydata %>% select(school_setting,pretest,posttest) %>% group_by(school_setting) %>% summarise(pretest_set=mean(pretest), posttest_set=mean(posttest))
mean_set
mean_set_tidy <- mean_set %>% pivot_longer(cols=c(pretest_set,posttest_set))
mean_set_tidy
mean_set_tidy %>% ggplot(aes(fill=factor(name, levels = c('pretest_set','posttest_set')), x= school_setting, y=value)) +
geom_col(position = "dodge", width=0.7) +
labs(title= "Mean of test scores of students across different locations") +
theme_test() +
theme(legend.title = element_blank()) +
scale_fill_brewer(palette = "Pastel1")
type_school <- group_by(mydata,school_type) %>% count()
type_school
type_school %>% ggplot(aes(x=school_type, y=n)) +
geom_bar(stat="identity", fill= "#f68060", alpha=0.6, width=0.4) +
coord_flip() +
theme_ggstatsplot() +
labs(y="Number of Students", x="School Type", title = "                   Number of Students studying in different School Types")
mean_type <- mydata %>% select(school_type,pretest,posttest) %>% group_by(school_type) %>% summarise(pretest_type=mean(pretest), posttest_type=mean(posttest))
mean_type
mean_type_tidy <- mean_type %>% pivot_longer(cols=c(pretest_type,posttest_type))
mean_type_tidy
mean_type_tidy %>% ggplot(aes(fill=factor(name, levels = c('pretest_type','posttest_type')), x= school_type, y=value)) +
geom_col(position = "dodge", width=0.7) +
labs(title= "Mean of test scores of students across different types of schools") +
theme_test() +
theme(legend.title = element_blank()) +
labs(x="School Type",y="Mean Score") +
scale_fill_brewer(palette = "Set2")
teaching <- group_by(mydata,teaching_method) %>% count()
teaching
teaching %>% ggplot(aes(x=teaching_method, y=n)) +
geom_bar(stat="identity", fill= "#f68060", alpha=0.6, width=0.4) +
coord_flip() +
theme_ggstatsplot() +
labs(y="Number of Students", x="Teaching Method", title = "Distribution of Students undergoing different type of teaching methodologies")
mean_teach <- mydata %>% select(teaching_method,pretest,posttest) %>% group_by(teaching_method) %>% summarise(pretest_teach=mean(pretest), posttest_teach=mean(posttest))
mean_teach
mean_teach_tidy <- mean_teach %>% pivot_longer(cols=c(pretest_teach,posttest_teach))
mean_teach_tidy
mean_teach_tidy %>% ggplot(aes(fill=factor(name, levels = c('pretest_teach','posttest_teach')), x= teaching_method, y=value)) +
geom_col(position = "dodge", width=0.7) +
labs(x="Teaching Method", y="Mean Score" , title= "Mean of test scores of students undergoing different teaching methodologies") +
theme_test() +
theme(legend.title = element_blank()) +
scale_fill_brewer(palette = "Pastel1")
gender_st <- group_by(mydata,gender) %>% count()
gender_st
genderwise_schoolwise <- mydata %>% select(school,gender) %>% group_by(school,gender) %>% count()
genderwise_schoolwise
genderwise_schoolwise %>% ggplot(aes(x=school, y=n, fill=factor(gender, levels = c('Female','Male')))) +
geom_bar(stat="identity",width=0.7) +
coord_flip() +
theme_ggstatsplot() +
theme(legend.title = element_blank()) +
labs(x="School Name",y="Number of Students", title="Gender Distribution of students in each school") +
scale_fill_manual(values = c("lightsalmon","darkturquoise"))
max(mydata$pretest)
max(mydata$posttest)
min(mydata$pretest)
min(mydata$posttest)
mean(mydata$pretest)
mean(mydata$posttest)
median(mydata$pretest)
median(mydata$posttest)
pre_post <- mydata %>% select(pretest,posttest) %>% pivot_longer(cols=c(pretest,posttest))
pre_post
pre_post %>% ggplot(aes(x=factor(name, levels = c('pretest','posttest')), y=value, fill=factor(name, levels = c('pretest','posttest')))) +
geom_violin() +
geom_boxplot(width=0.3) +
labs(x="",y="Marks", title="                                              Distribution of scores") +
theme_ggstatsplot() +
theme(legend.title = element_blank()) +
scale_fill_brewer(palette="Pastel1")
# # Create dummy data
# data <- data.frame(
#   cond = rep(c("condition_1", "condition_2"), each=10),
#   my_x = 1:100 + rnorm(100,sd=9),
#   my_y = 1:100 + rnorm(100,sd=16)
# )
#
# # Basic scatter plot.
# p1 <- ggplot(data, aes(x=my_x, y=my_y)) +
#   geom_point( color="#69b3a2") +
#   theme_ipsum()
#
# # with linear trend
# p2 <- ggplot(data, aes(x=my_x, y=my_y)) +
#   geom_point() +
#   geom_smooth(method=lm , color="red", se=FALSE) +
#   theme_ipsum()
#
# # linear trend + confidence interval
# p3 <- ggplot(data, aes(x=my_x, y=my_y)) +
#   geom_point() +
#   geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
#   theme_ipsum()
summary(mydata$pretest)
```{r}
summary(mydata$posttest)
pre_post <- mydata %>% select(pretest,posttest) %>% pivot_longer(cols=c(pretest,posttest))
pre_post
pre_post %>% ggplot(aes(x=factor(name, levels = c('pretest','posttest')), y=value, fill=factor(name, levels = c('pretest','posttest')))) +
geom_violin() +
geom_boxplot(width=0.3) +
labs(x="",y="Marks", title="                                              Distribution of scores") +
theme_ggstatsplot() +
theme(legend.title = element_blank()) +
scale_fill_brewer(palette="Pastel1")
pre_post_scatter
pre_post_scatter <- mydata %>% select(pretest,posttest)
pre_post_scatter
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2")
install.packages("hrbrtheme")
library(hrbrtheme)
library(hrbrthemes)
install.packages("hrbrthemes")
library(hrbrthemes)
```{r}
library(tidyverse)
library(Hmisc)
library(ggplot2)
library(ggstatsplot)
library(hrbrthemes)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ipsum
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ipsum()
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_classic()
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_minimal
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_minimal()
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot()
library(ggstatsplot)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="o", fill="369b3a2", se=TRUE)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="orange", fill="369b3a2", se=TRUE)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_classic() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_minimal() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="Correlation between pretest and posttest scores")
school_count <- group_by(mydata,school) %>% count()
school_count
school_count %>% ggplot(aes(x=school, y=n)) +
geom_bar(stat="identity", fill= "#f68060", alpha=0.6, width=0.) +
coord_flip() +
theme_ggstatsplot() +
labs(y="Number of Students", x="Name of School", title = "                   Distribution of Students studying in different Schools")
school_count %>% ggplot(aes(x=school, y=n)) +
geom_bar(stat="identity", fill= "#f68060", alpha=0.6, width=0.7) +
coord_flip() +
theme_ggstatsplot() +
labs(y="Number of Students", x="Name of School", title = "                   Distribution of Students studying in different Schools")
head(pre_post_scatter)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="Correlation between pretest and posttest scores")
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="orange", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="Correlation between pretest and posttest scores")
369b3a2
```{r}
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="Correlation between pretest and posttest scores")
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="Correlation between Pretest and Posttest scores")
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="                       Correlation between Pretest and Posttest scores")
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="                          Correlation between Pretest and Posttest scores")
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="                                  Correlation between Pretest and Posttest scores")
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="                        Correlation between Pretest and Posttest scores")
library(hrbrthemes)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ipsum() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="                        Correlation between Pretest and Posttest scores")
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="                        Correlation between Pretest and Posttest scores")
library(ggstatsplot)
teaching <- group_by(mydata,teaching_method) %>% count()
teaching
teaching %>% ggplot(aes(x=teaching_method, y=n)) +
geom_bar(stat="identity", fill= "#f68060", alpha=0.6, width=0.4) +
coord_flip() +
theme_ggstatsplot() +
labs(y="Number of Students", x="Teaching Method", title = "Distribution of Students undergoing different type of teaching methodologies")
mean_teach <- mydata %>% select(teaching_method,pretest,posttest) %>% group_by(teaching_method) %>% summarise(pretest_teach=mean(pretest), posttest_teach=mean(posttest))
mean_teach
mean_teach_tidy <- mean_teach %>% pivot_longer(cols=c(pretest_teach,posttest_teach))
mean_teach_tidy
mean_teach_tidy %>% ggplot(aes(fill=factor(name, levels = c('pretest_teach','posttest_teach')), x= teaching_method, y=value)) +
geom_col(position = "dodge", width=0.7) +
labs(x="Teaching Method", y="Mean Score" , title= "Mean of test scores of students undergoing different teaching methodologies") +
theme_test() +
theme(legend.title = element_blank()) +
scale_fill_brewer(palette = "Pastel1")
gender_st <- group_by(mydata,gender) %>% count()
gender_st
gender_st <- group_by(mydata,gender) %>% count()
gender_st
```{r}
genderwise_schoolwise <- mydata %>% select(school,gender) %>% group_by(school,gender) %>% count()
genderwise_schoolwise
genderwise_schoolwise %>% ggplot(aes(x=school, y=n, fill=factor(gender, levels = c('Female','Male')))) +
geom_bar(stat="identity",width=0.7) +
coord_flip() +
theme_ggstatsplot() +
theme(legend.title = element_blank()) +
labs(x="School Name",y="Number of Students", title="Gender Distribution of students in each school") +
scale_fill_manual(values = c("lightsalmon","darkturquoise"))
```{r}
summary(mydata$pretest)
summary(mydata$pretest)
```{r}
summary(mydata$posttest)
summary(mydata$posttest)
summary(mydata$posttest)
```{r}
pre_post <- mydata %>% select(pretest,posttest) %>% pivot_longer(cols=c(pretest,posttest))
pre_post
pre_post %>% ggplot(aes(x=factor(name, levels = c('pretest','posttest')), y=value, fill=factor(name, levels = c('pretest','posttest')))) +
geom_violin() +
geom_boxplot(width=0.3) +
labs(x="",y="Marks", title="                                              Distribution of scores") +
theme_ggstatsplot() +
theme(legend.title = element_blank()) +
scale_fill_brewer(palette="Pastel1")
pre_post_scatter <- mydata %>% select(pretest,posttest)
head(pre_post_scatter)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="                        Correlation between Pretest and Posttest scores")
glimpse(mydata)
knitr::opts_chunk$set(echo = TRUE)
mydata = read.csv("./test_scores.csv")
head(mydata) %>% knitr::kable()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Hmisc)
library(ggplot2)
library(ggstatsplot)
```
library(tidyverse)
library(Hmisc)
library(ggplot2)
library(ggstatsplot)
```
mydata = read.csv("./test_scores.csv")
head(mydata) %>% knitr::kable()
unlink('EDA_cache', recursive = TRUE)
unlink('EDA_cache', recursive = TRUE)
unlink('EDA_cache', recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Hmisc)
library(ggplot2)
library(ggstatsplot)
mydata = read.csv("./test_scores.csv")
head(mydata) %>% knitr::kable()
str(mydata)
summary(mydata)
class(mydata)
length(mydata)
names(mydata)
school_count <- group_by(mydata,school) %>% count()
school_count
school_count %>% ggplot(aes(x=school, y=n)) +
geom_bar(stat="identity", fill= "#f68060", alpha=0.6, width=0.7) +
coord_flip() +
theme_ggstatsplot() +
labs(y="Number of Students", x="Name of School", title = "                   Distribution of Students studying in different Schools")
class(school_count)
count(mydata,school) %>% arrange(n) %>% head(1)
count(mydata,school) %>% arrange(n) %>% tail(1)
mydata %>% filter(school == "ANKYI") %>% knitr::kable()
mean_school <- mydata %>% select(school,pretest,posttest) %>% group_by(school) %>% summarise(pretest_mean=mean(pretest), posttest_mean=mean(posttest))
mean_school
mean_school %>% ggplot() +
geom_segment(aes(x=school,xend=school,y=pretest_mean,yend=posttest_mean),color="grey") +
geom_point(aes(x=school,y=pretest_mean,color="pretest marks"))+
geom_point(aes(x=school,y=posttest_mean,color="posttest marks"))+
scale_color_manual(values = c("pretest marks"="red","posttest marks"="blue"))+
ggtitle("Pretest vs Posttest average marks comparison across Schools")+
xlab("School")+
ylab("Average Marks")+
coord_flip()+
theme_minimal()+
theme(
legend.title = element_blank()
)
school_set <- group_by(mydata,school_setting) %>% count()
school_set
school_set %>% count() %>% ggplot(aes(x="",y=c(school_set$n), fill=school_setting)) +
geom_bar(stat="identity", width=1) +
coord_polar("y",start=0) +
theme_void() +
labs(title= "Distribution of Students according to location") +
theme(legend.title=element_blank()) +
geom_text(aes(label=paste0(school_set$n," (",scales::percent(school_set$n/sum(school_set$n)),")")),position = position_stack(vjust=0.5)) +
scale_fill_brewer(palette="Pastel1")
mean_set <- mydata %>% select(school_setting,pretest,posttest) %>% group_by(school_setting) %>% summarise(pretest_set=mean(pretest), posttest_set=mean(posttest))
mean_set
mean_set_tidy <- mean_set %>% pivot_longer(cols=c(pretest_set,posttest_set))
mean_set_tidy
mean_set_tidy %>% ggplot(aes(fill=factor(name, levels = c('pretest_set','posttest_set')), x= school_setting, y=value)) +
geom_col(position = "dodge", width=0.7) +
labs(title= "Mean of test scores of students across different locations") +
theme_test() +
theme(legend.title = element_blank()) +
scale_fill_brewer(palette = "Pastel1")
type_school <- group_by(mydata,school_type) %>% count()
type_school
type_school %>% ggplot(aes(x=school_type, y=n)) +
geom_bar(stat="identity", fill= "#f68060", alpha=0.6, width=0.4) +
coord_flip() +
theme_ggstatsplot() +
labs(y="Number of Students", x="School Type", title = "                   Number of Students studying in different School Types")
mean_type <- mydata %>% select(school_type,pretest,posttest) %>% group_by(school_type) %>% summarise(pretest_type=mean(pretest), posttest_type=mean(posttest))
mean_type
mean_type_tidy <- mean_type %>% pivot_longer(cols=c(pretest_type,posttest_type))
mean_type_tidy
mean_type_tidy %>% ggplot(aes(fill=factor(name, levels = c('pretest_type','posttest_type')), x= school_type, y=value)) +
geom_col(position = "dodge", width=0.7) +
labs(title= "Mean of test scores of students across different types of schools") +
theme_test() +
theme(legend.title = element_blank()) +
labs(x="School Type",y="Mean Score") +
scale_fill_brewer(palette = "Set2")
teaching <- group_by(mydata,teaching_method) %>% count()
teaching
teaching %>% ggplot(aes(x=teaching_method, y=n)) +
geom_bar(stat="identity", fill= "#f68060", alpha=0.6, width=0.4) +
coord_flip() +
theme_ggstatsplot() +
labs(y="Number of Students", x="Teaching Method", title = "Distribution of Students undergoing different type of teaching methodologies")
mean_teach <- mydata %>% select(teaching_method,pretest,posttest) %>% group_by(teaching_method) %>% summarise(pretest_teach=mean(pretest), posttest_teach=mean(posttest))
mean_teach
mean_teach_tidy <- mean_teach %>% pivot_longer(cols=c(pretest_teach,posttest_teach))
mean_teach_tidy
mean_teach_tidy %>% ggplot(aes(fill=factor(name, levels = c('pretest_teach','posttest_teach')), x= teaching_method, y=value)) +
geom_col(position = "dodge", width=0.7) +
labs(x="Teaching Method", y="Mean Score" , title= "Mean of test scores of students undergoing different teaching methodologies") +
theme_test() +
theme(legend.title = element_blank()) +
scale_fill_brewer(palette = "Pastel1")
gender_st <- group_by(mydata,gender) %>% count()
gender_st
genderwise_schoolwise <- mydata %>% select(school,gender) %>% group_by(school,gender) %>% count()
genderwise_schoolwise
genderwise_schoolwise %>% ggplot(aes(x=school, y=n, fill=factor(gender, levels = c('Female','Male')))) +
geom_bar(stat="identity",width=0.7) +
coord_flip() +
theme_ggstatsplot() +
theme(legend.title = element_blank()) +
labs(x="School Name",y="Number of Students", title="Gender Distribution of students in each school") +
scale_fill_manual(values = c("lightsalmon","darkturquoise"))
summary(mydata$pretest)
summary(mydata$posttest)
pre_post <- mydata %>% select(pretest,posttest) %>% pivot_longer(cols=c(pretest,posttest))
pre_post
pre_post %>% ggplot(aes(x=factor(name, levels = c('pretest','posttest')), y=value, fill=factor(name, levels = c('pretest','posttest')))) +
geom_violin() +
geom_boxplot(width=0.3) +
labs(x="",y="Marks", title="                                              Distribution of scores") +
theme_ggstatsplot() +
theme(legend.title = element_blank()) +
scale_fill_brewer(palette="Pastel1")
pre_post_scatter <- mydata %>% select(pretest,posttest)
head(pre_post_scatter)
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="                        Correlation between Pretest and Posttest scores")
pre_post_scatter %>% ggplot(aes(x=pretest, y=posttest)) +
geom_point(color="#69b3a2") +
theme_ggstatsplot() +
geom_smooth(method=lm, color="red", fill="369b3a2", se=TRUE) +
labs(x="Prestest Score", y="Posttest Score", title="                        Correlation between Pretest and Posttest scores")
unlink('EDA_cache', recursive = TRUE)
unlink('EDA_cache', recursive = TRUE)
unlink('EDA_cache', recursive = TRUE)
